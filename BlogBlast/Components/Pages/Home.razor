@page "/"

@using BlogBlast.Data.Entities

@inject IPostService PostService

<PageTitle>Home</PageTitle>

<!-- Render the first featured post if it exists -->
@if (_FirstFeatured is not null)
{
    <div class="container">
        <div class="jumbotron jumbotron-fluid mb-3 pt-0 pb-0 bg-lightblue position-relative">
            <div class="pl-4 pr-0 h-100 tofront">
                <div class="row justify-content-between">
                    <div class="col-md-6 pt-6 pb-6 align-self-center">
                        <!-- Display the title and introduction of the first featured post -->
                        <h1 class="secondfont mb-3 font-weight-bold">@_FirstFeatured.Title</h1>
                        <p class="mb-3">
                            @_FirstFeatured.Introduction
                        </p>
                        <a href="posts/@_FirstFeatured.Slug" class="btn btn-dark">Read More</a>
                    </div>
                    <!-- Display the image of the first featured post -->
                    <div class="col-md-6 d-none d-md-block pr-0" style="background-size:cover;background-image:url(@_FirstFeatured.Image);"></div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Display the list of featured blog posts -->
<div class="container pt-4 pb-4">
    <FeaturedBlogPosts Posts="_featured" />
</div>

<!-- Display the list of latest and popular blog posts -->
<div class="container">
    <div class="row justify-content-between">
        <div class="col-md-8">
            <h5 class="font-weight-bold spanborder"><span>Latest Blogs</span></h5>
            <!-- Display the list of latest blog posts -->
            <BlogPostList Posts="_latest" />
        </div>
        <div class="col-md-4 pl-4">
            <h5 class="font-weight-bold spanborder"><span>Popular Blogs</span></h5>
            <!-- Display the list of popular blog posts -->
            <PopularBlogPosts Posts="_popular" />
        </div>
    </div>
</div>

@code
{
    private Post[] _featured = [];
    private Post[] _popular = [];
    private Post[] _latest = [];

    private Post _FirstFeatured = default!;

    protected override async Task OnInitializedAsync()
    {
        // Fetching featured, popular, and latest posts asynchronously
        var posts = await Task.WhenAll(
            PostService.GetFeaturedPostsAsync(5),
            PostService.GetPopularPostsAsync(4),
            PostService.GetLatestPostsAsync(5)
        );

        // Assigning fetched posts to corresponding variables
        _featured = posts[0];
        _popular = posts[1];
        _latest = posts[2];

        // Assigning the first featured post to _FirstFeatured and removing it from the _featured array
        _FirstFeatured = _featured[0];
        _featured = _featured.Skip(1).ToArray();
    }
}
